#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/rgb.h>
#include <dt-bindings/zmk/backlight.h>

#define DEFAULT        0
#define CODE           1
#define MODS           2
#define CONFIG         3
#define DOTA_BASE      4
#define DOTA_SHIFT     5

/ {
  keymap {
    compatible = "zmk,keymap";

    default_layer {
      bindings = <
        &kp EQUAL              &kp N1            &kp N2             &kp N3             &kp N4                     &kp N5                 &mo DEFAULT                                                                          &mo DEFAULT   &kp N6              &kp N7                    &kp N8             &kp N9            &kp N0           &kp MINUS
        &kp ESC                &rpi ESCAPE Q     &rpi_lyr CODE W    &rpi_lyr MODS E    &rpi_lyr_slow CONFIG R     &kp T                  &mo CONFIG                                                                           &mo CONFIG    &kp Y               &rpi_lyr_slow CONFIG U    &rpi_lyr MODS I    &rpi_lyr CODE O   &rpi ESCAPE P    &kp BSLH
        &kp TAB                &rpi LSHIFT A     &rpi LCTRL S       &rpi LALT D        &rpi LSHIFT F              &rpi LCMD G            &tog DOTA_BASE         &kp LCMD &kp LCTRL &kp RCTRL &kp LGUI                         &mo MODS      &rpi RCMD H         &rpi RSHIFT J             &rpi RALT K        &rpi RCTRL L      &rpi RSHIFT SEMI &kp TAB
        &kp LSHFT              &kp Z             &kp X              &rpi CAPSLOCK C    &kp V                      &prm BSPC B                                         &kp HOME &kp PG_UP                                                    &prm DEL BSPC       &prm RET N                &kp M              &kp COMMA         &kp DOT          &kp RSHFT
        &rgb_ug RGB_MEFS_CMD 5 &kp CAPS          &kp GRAVE          &kp UP             &kp DOWN                                       &rpi LCMD DEL &rpi_lyr CODE RET &kp END &kp PG_DN &rpi_lyr CODE SPACE &rpi RCMD BSPC                                  &kp LEFT                  &kp RIGHT          &kp SLASH         &kp BSLH         &rgb_ug RGB_TOG
      >;
    };
    code_layer  {
      bindings = <
        &kp EQUAL         &kp N1            &kp N2            &kp N3             &kp N4              &kp N5             &trans                                                                               &mo 3 &kp N6                 &kp KP_NUM                &kp KP_EQUAL           &kp KP_DIVIDE            &kp KP_MULTIPLY         &kp MINUS
        &kp TAB           &rpi_slow F1 N1   &rpi_slow F2 N2   &rpi_slow F3 N3    &rpi_slow F4 N4     &rpi_slow F5 N5    &none                                                                                &none &rpi_fast PLUS EQUAL   &rpi_fast UNDER MINUS     &rpi_fast LT LPAR      &rpi_fast GT RPAR        &kp AMPS                &kp BSLH
        &kp ESC           &rpi_slow F6 N6   &rpi_slow F7 N7   &rpi_slow F8 N8    &rpi_slow F9 N9     &rpi_slow F10 N0   &none                   &kp LCTRL &kp LCMD &kp LGUI  &kp RCTRL                       &none &rpi_fast QMARK AT     &rpi_fast SQT DQT         &rpi_fast LBKT LBRC    &rpi_fast RBKT RBRC      &rpi_fast PIPE EXCL     &kp SQT
        &kp LSHFT         &kp F11           &kp F12           &trans             &trans              &trans                                         &kp HOME &kp PG_UP                                             &rpi_fast SLASH HASH   &rpi_fast BSLH DOLLAR     &rpi_fast PIPE PRCNT   &rpi_fast TILDE GRAVE    &rpi_fast CARET ASTRK   &kp RSHFT
        &trans            &kp GRAVE         &kp CAPS          &kp LEFT           &kp RIGHT                                       &rpi LCMD TAB &kp BSPC  &kp END  &kp PG_DN &kp BSPC &rpi RCMD TAB                                        &kp UP                    &kp DOWN               &kp KP_DOT               &kp RBKT                &trans
      >;
    };
    mods_layer  {
      bindings = <
        &kp F1 &kp F2     &kp F3                  &kp F4                     &kp F5                            &kp F6                                           &tog 1                                                          &mo 3 &kp F7                             &kp F8                             &kp F9                    &kp F10               &kp F11 &kp F12
        &trans &trans     &trans                  &rpi_slow PAGE_UP UP       &rpi_slow C_BRI_DN C_VOLUME_DOWN  &rpi_slow C_BRI_UP C_VOLUME_UP                   &rpi_slow F5 N5                                                 &none &rpi_slow C_BRI_DN C_VOLUME_DOWN   &rpi_slow C_BRI_UP  C_VOLUME_UP    &rpi_slow PAGE_UP UP      &trans                &trans  &trans
        &trans &trans     &rpi_slow HOME LEFT     &rpi_slow PAGE_DOWN DOWN   &rpi_slow END RIGHT               &trans                                           &none                  &trans &trans &trans &trans              &none &trans                             &rpi_slow HOME LEFT                &rpi_slow PAGE_DOWN DOWN  &rpi_slow END RIGHT   &trans  &trans
        &trans &kp F11    &kp F12                 &trans                     &rpi_fast C_BRI_DN C_VOLUME_DOWN  &rpi_fast C_BRI_UP C_VOLUME_UP                                                 &trans &trans                           &trans                             &trans                             &trans                    &trans                &trans  &trans
        &trans &trans     &trans                  &trans                     &trans                                                                                               &kp RET &trans &trans &trans &trans &kp RET                                            &trans                             &trans                    &trans                &trans  &trans
      >;
    };
    config_layer  {
      bindings = <
        &none &bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2 &bt BT_SEL 3 &bt BT_SEL 4 &none                                                                           &trans                 &bt BT_SEL 4 &bt BT_SEL 3   &bt BT_SEL 2   &bt BT_SEL 1  &bt BT_SEL 0  &none
        &none &none        &none        &none        &none        &bt BT_CLR   &none                                                                           &none                  &bt BT_CLR   &none          &none          &none         &none         &none
        &none &none        &none        &none        &none        &none        &none                   &bootloader &none &bt BT_CLR &bootloader                &rgb_ug RGB_MEFS_CMD 5 &none        &none          &none          &none         &none         &none
        &none &bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2 &bt BT_SEL 3 &bt BT_SEL 4                                      &none &none                                                       &bt BT_SEL 4 &bt BT_SEL 3   &bt BT_SEL 2   &bt BT_SEL 1  &bt BT_SEL 0  &none
        &none &none        &none        &none        &none                                       &bootloader &none &none &none      &bl BL_TOG &bootloader                                         &bl BL_INC     &bl BL_DEC     &none         &none         &none
      >;
    };

    dota_base_layer   {
      bindings = <
        &none  &kp N1        &kp N2         &kp N3        &kp N4           &kp N5         &none                                                         &none      &none        &none        &none        &none &none &none
        &none  &kp Q         &kp W          &kp E         &kp R            &prm Y T       &none                                                         &none      &none        &none        &none        &none &none &none
        &none  &kp A         &prm LCTRL S   &prm LALT D   &prm LSHIFT F    &kp G          &mo DOTA_BASE            &kp F14 &kp F15 &none &none                     &none        &none        &none        &none        &none &none &none
        &none  &kp Z         &kp X          &kp C         &kp V            &kp B                                      &none &none                                  &none        &none        &none        &none &none &none
        &none  &none         &kp F3         &kp F2        &kp F1                                        &kp LALT &kp F16 &none &none     &none &none                            &none        &none        &none &none &none
      >;
    };

    dota_shift_layer   {
      bindings = <
        &none &none         &none          &none           &none             &none         &none                                                                     &trans            &none    &none        &none       &none &none &none
        &none &kp N1        &kp N2         &kp N3          &kp N4            &kp N5        &bootloader                                                               &bootloader       &none    &none        &none       &none &none &none
        &none &kp N6        &kp N7         &kp N8          &kp N9            &kp N0        &none                   &none &none &none &none                      &rgb_ug RGB_MEFS_CMD 5 &none    &none        &none       &none &none &none
        &none &kp F1        &kp F2         &kp F3          &kp F4            &kp F5                                      &none &none                                                   &none    &none        &none       &none &none &none
        &none &none         &none          &none           &none                                       &none &none &none &none      &bl BL_TOG &rgb_ug RGB_TOG                                  &none        &none  &none &none &none
      >;
    };
  };

  behaviors {
      #include "macros.dtsi"
      #include "version.dtsi"
      #ifndef VERSION_MACRO
      macro_ver: macro_ver {
        compatible = "zmk,behavior-macro";
        label = "macro_version";
        #binding-cells = <0>;
        bindings = <&kp RET>;
      };
      #endif

      hm: homerow_mods {
          compatible = "zmk,behavior-hold-tap";
          label = "HOMEROW_MODS";
          #binding-cells = <2>;
          tapping-term-ms = <200>;
          quick_tap_ms = <175>;
          flavor = "tap-preferred";
          bindings = <&kp>, <&kp>;
      };

              rpi: rpi {
                    compatible = "zmk,behavior-hold-tap";
                    #binding-cells = <2>;
                    flavor = "tap-preferred";
                    tapping-term-ms = <250>;
                    quick-tap-ms = <250>;
                    require-prior-idle-ms = <120>;
                    bindings = <&kp>, <&kp>;
                };

                prm: prm {
                    compatible = "zmk,behavior-hold-tap";
                    #binding-cells = <2>;
                    flavor = "tap-preferred";
                    tapping-term-ms = <150>;
                    quick-tap-ms = <250>;
                    require-prior-idle-ms = <120>; 
                    bindings = <&kp>, <&kp>;
                };


                rpi_fast: rpi_fast {
                    compatible = "zmk,behavior-hold-tap";
                    #binding-cells = <2>;
                    flavor = "tap-preferred";
                    tapping-term-ms = <150>;
                    quick-tap-ms = <250>;
                    require-prior-idle-ms = <120>;
                    bindings = <&kp>, <&kp>;
                };

                rpi_slow: rpi_slow {
                    compatible = "zmk,behavior-hold-tap";
                    #binding-cells = <2>;
                    flavor = "tap-preferred";
                    tapping-term-ms = <350>;
                    quick-tap-ms = <250>;
                    require-prior-idle-ms = <120>;
                    bindings = <&kp>, <&kp>;
                };

                rpi_lyr: rpi_lyr {
                    compatible = "zmk,behavior-hold-tap";
                    #binding-cells = <2>;
                    flavor = "tap-preferred";
                    tapping-term-ms = <250>;
                    quick-tap-ms = <250>;
                    require-prior-idle-ms = <120>;
                    bindings = <&mo>, <&kp>;
                };

                rpi_lyr_slow: rpi_lyr_slow {
                    compatible = "zmk,behavior-hold-tap";
                    #binding-cells = <2>;
                    flavor = "tap-preferred";
                    tapping-term-ms = <400>;
                    quick-tap-ms = <250>;
                    require-prior-idle-ms = <120>;
                    bindings = <&mo>, <&kp>;
                };
    };

};
